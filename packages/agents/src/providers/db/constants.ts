// SQL constants for commands, types, constraints, and keywords
// Used to avoid magic strings and standardize SQL generation
export const SQL_DROP_TABLE_IF_EXISTS = 'DROP TABLE IF EXISTS';
export const SQL_ALTER_TABLE = 'ALTER TABLE';
export const SQL_ADD_COLUMN = 'ADD COLUMN';
export const SQL_DROP_COLUMN = 'DROP COLUMN';
export const SQL_RENAME_COLUMN = 'RENAME COLUMN';
export const SQL_RENAME_TO = 'RENAME TO';
export const SQL_CREATE_INDEX = 'CREATE INDEX';
export const SQL_UNIQUE_INDEX = 'CREATE UNIQUE INDEX';
export const SQL_UNIQUE = 'UNIQUE';
export const SQL_PRIMARY_KEY = 'PRIMARY KEY';
export const SQL_NOT_NULL = 'NOT NULL';
export const SQL_DEFAULT = 'DEFAULT';
export const SQL_CHECK = 'CHECK';
export const SQL_REFERENCES = 'REFERENCES';
export const SQL_IF_NOT_EXISTS = 'IF NOT EXISTS';
export const SQL_DROP_INDEX_IF_EXISTS = 'DROP INDEX IF EXISTS';
export const SQL_ADD_CONSTRAINT = 'ADD CONSTRAINT';
export const SQL_DROP_CONSTRAINT = 'DROP CONSTRAINT';
export const SQL_FOREIGN_KEY = 'FOREIGN KEY';

// Additional SQL keywords for clarity and reusability:
export const SQL_NULL = 'NULL';
export const SQL_SET_DATA_TYPE = 'SET DATA TYPE';
export const SQL_TO = 'TO';

// DuckDB SQL dialect keywords
export const SQL_KEYWORD_SELECT = 'SELECT';
export const SQL_KEYWORD_FROM = 'FROM';
export const SQL_KEYWORD_WHERE = 'WHERE';
export const SQL_KEYWORD_AND = 'AND';
export const SQL_KEYWORD_OR = 'OR';
export const SQL_KEYWORD_AS = 'AS';
export const SQL_KEYWORD_LIKE = 'LIKE';
export const SQL_KEYWORD_IN = 'IN';
export const SQL_KEYWORD_IS = 'IS';
export const SQL_KEYWORD_TRUE = 'TRUE';
export const SQL_KEYWORD_FALSE = 'FALSE';
export const SQL_KEYWORD_DISTINCT = 'DISTINCT';
export const SQL_KEYWORD_LIMIT = 'LIMIT';
export const SQL_KEYWORD_OFFSET = 'OFFSET';
export const SQL_KEYWORD_ORDER_BY = 'ORDER BY';
export const SQL_KEYWORD_GROUP_BY = 'GROUP BY';
export const SQL_KEYWORD_HAVING = 'HAVING';
export const SQL_KEYWORD_JOIN = 'JOIN';
export const SQL_KEYWORD_USING = 'USING';
export const SQL_KEYWORD_UNION = 'UNION';
export const SQL_KEYWORD_ALL = 'ALL';
export const SQL_KEYWORD_BETWEEN = 'BETWEEN';
export const SQL_KEYWORD_CASE = 'CASE';
export const SQL_KEYWORD_WHEN = 'WHEN';
export const SQL_KEYWORD_THEN = 'THEN';
export const SQL_KEYWORD_ELSE = 'ELSE';
export const SQL_KEYWORD_END = 'END';
export const SQL_KEYWORD_ASC = 'ASC';
export const SQL_KEYWORD_DESC = 'DESC';
export const SQL_KEYWORD_DEFAULT = 'DEFAULT';
export const SQL_KEYWORD_PRIMARY_KEY = 'PRIMARY KEY';
export const SQL_KEYWORD_FOREIGN_KEY = 'FOREIGN KEY';
export const SQL_KEYWORD_REFERENCES = 'REFERENCES';
export const SQL_KEYWORD_CHECK = 'CHECK';
export const SQL_KEYWORD_UNIQUE = 'UNIQUE';
export const SQL_KEYWORD_NOT = 'NOT';
export const SQL_KEYWORD_SET = 'SET';
export const SQL_KEYWORD_VALUES = 'VALUES';
export const SQL_KEYWORD_INSERT = 'INSERT';
export const SQL_KEYWORD_UPDATE = 'UPDATE';
export const SQL_KEYWORD_DELETE = 'DELETE';
export const SQL_KEYWORD_CREATE = 'CREATE';
export const SQL_KEYWORD_DROP = 'DROP';
export const SQL_KEYWORD_ALTER = 'ALTER';
export const SQL_KEYWORD_TABLE = 'TABLE';
export const SQL_KEYWORD_INDEX = 'INDEX';
export const SQL_KEYWORD_VIEW = 'VIEW';
export const SQL_KEYWORD_TRIGGER = 'TRIGGER';
export const SQL_KEYWORD_IF = 'IF';
export const SQL_KEYWORD_EXISTS = 'EXISTS';
export const SQL_KEYWORD_DATABASE = 'DATABASE';
export const SQL_KEYWORD_CAST = 'CAST';
export const SQL_KEYWORD_WITH = 'WITH';
export const SQL_KEYWORD_RECURSIVE = 'RECURSIVE';
export const SQL_KEYWORD_EXPLAIN = 'EXPLAIN';
export const SQL_KEYWORD_ANALYZE = 'ANALYZE';
export const SQL_KEYWORD_RENAME = 'RENAME';
export const SQL_KEYWORD_ADD = 'ADD';
export const SQL_KEYWORD_CONSTRAINT = 'CONSTRAINT';
export const SQL_KEYWORD_COLUMN = 'COLUMN';
export const SQL_KEYWORD_SCHEMA = 'SCHEMA';
export const SQL_KEYWORD_TEMP = 'TEMP';
export const SQL_KEYWORD_TEMPORARY = 'TEMPORARY';
export const SQL_KEYWORD_ABORT = 'ABORT';
export const SQL_KEYWORD_ROLLBACK = 'ROLLBACK';
export const SQL_KEYWORD_COMMIT = 'COMMIT';
export const SQL_KEYWORD_BEGIN = 'BEGIN';
export const SQL_KEYWORD_TRANSACTION = 'TRANSACTION';

export const SQL_KEYWORDS = [
  SQL_KEYWORD_SELECT,
  SQL_KEYWORD_FROM,
  SQL_KEYWORD_WHERE,
  SQL_KEYWORD_AND,
  SQL_KEYWORD_OR,
  SQL_KEYWORD_AS,
  SQL_KEYWORD_LIKE,
  SQL_KEYWORD_IN,
  SQL_KEYWORD_IS,
  SQL_KEYWORD_TRUE,
  SQL_KEYWORD_FALSE,
  SQL_KEYWORD_DISTINCT,
  SQL_KEYWORD_LIMIT,
  SQL_KEYWORD_OFFSET,
  SQL_KEYWORD_ORDER_BY,
  SQL_KEYWORD_GROUP_BY,
  SQL_KEYWORD_HAVING,
  SQL_KEYWORD_JOIN,
  SQL_KEYWORD_USING,
  SQL_KEYWORD_UNION,
  SQL_KEYWORD_ALL,
  SQL_KEYWORD_EXISTS,
  SQL_KEYWORD_BETWEEN,
  SQL_KEYWORD_CASE,
  SQL_KEYWORD_WHEN,
  SQL_KEYWORD_THEN,
  SQL_KEYWORD_ELSE,
  SQL_KEYWORD_END,
  SQL_KEYWORD_ASC,
  SQL_KEYWORD_DESC,
  SQL_KEYWORD_DEFAULT,
  SQL_KEYWORD_PRIMARY_KEY,
  SQL_KEYWORD_FOREIGN_KEY,
  SQL_KEYWORD_REFERENCES,
  SQL_KEYWORD_CHECK,
  SQL_KEYWORD_UNIQUE,
  SQL_KEYWORD_NOT,
  SQL_KEYWORD_SET,
  SQL_KEYWORD_VALUES,
  SQL_KEYWORD_INSERT,
  SQL_KEYWORD_UPDATE,
  SQL_KEYWORD_DELETE,
  SQL_KEYWORD_CREATE,
  SQL_KEYWORD_DROP,
  SQL_KEYWORD_ALTER,
  SQL_KEYWORD_TABLE,
  SQL_KEYWORD_INDEX,
  SQL_KEYWORD_VIEW,
  SQL_KEYWORD_TRIGGER,
  SQL_KEYWORD_IF,
  SQL_KEYWORD_EXISTS,
  SQL_KEYWORD_DATABASE,
  SQL_KEYWORD_SCHEMA,
  SQL_KEYWORD_CAST,
  SQL_KEYWORD_WITH,
  SQL_KEYWORD_RECURSIVE,
  SQL_KEYWORD_EXPLAIN,
  SQL_KEYWORD_ANALYZE,
  SQL_KEYWORD_RENAME,
  SQL_KEYWORD_ADD,
  SQL_KEYWORD_CONSTRAINT,
  SQL_KEYWORD_COLUMN,
  SQL_KEYWORD_SCHEMA,
  SQL_KEYWORD_TEMP,
  SQL_KEYWORD_TEMPORARY,
  SQL_KEYWORD_ABORT,
  SQL_KEYWORD_ROLLBACK,
  SQL_KEYWORD_COMMIT,
  SQL_KEYWORD_BEGIN,
  SQL_KEYWORD_TRANSACTION,
];

// Supported data types by DuckDB
export const SQL_TYPE_TINYINT = 'TINYINT';
export const SQL_TYPE_UTINYINT = 'UTINYINT';
export const SQL_TYPE_SMALLINT = 'SMALLINT';
export const SQL_TYPE_USMALLINT = 'USMALLINT';
export const SQL_TYPE_INTEGER = 'INTEGER';
export const SQL_TYPE_UINTEGER = 'UINTEGER';
export const SQL_TYPE_BIGINT = 'BIGINT';
export const SQL_TYPE_UBIGINT = 'UBIGINT';
export const SQL_TYPE_HUGEINT = 'HUGEINT';
export const SQL_TYPE_FLOAT = 'FLOAT';
export const SQL_TYPE_DOUBLE = 'DOUBLE';
export const SQL_TYPE_DECIMAL = 'DECIMAL';
export const SQL_TYPE_BOOLEAN = 'BOOLEAN';
export const SQL_TYPE_VARCHAR = 'VARCHAR';
export const SQL_TYPE_STRING = 'STRING';
export const SQL_TYPE_DATE = 'DATE';
export const SQL_TYPE_TIME = 'TIME';
export const SQL_TYPE_TIMESTAMP = 'TIMESTAMP';
export const SQL_TYPE_TIMESTAMPTZ = 'TIMESTAMPTZ';
export const SQL_TYPE_INTERVAL = 'INTERVAL';
export const SQL_TYPE_BLOB = 'BLOB';
export const SQL_TYPE_UUID = 'UUID';
export const SQL_TYPE_STRUCT = 'STRUCT';
export const SQL_TYPE_UNION = 'UNION';
export const SQL_TYPE_MAP = 'MAP';
export const SQL_TYPE_LIST = 'LIST';
export const SQL_TYPE_ARRAY = 'ARRAY';
export const SQL_TYPE_ENUM = 'ENUM';
export const SQL_TYPE_JSON = 'JSON';
export const SQL_TYPE_INET = 'INET';
export const SQL_TYPE_MACADDR = 'MACADDR';
export const SQL_TYPE_BIT = 'BIT';
export const SQL_TYPE_BITSTRING = 'BITSTRING';

export const SQL_DATA_TYPES = [
  SQL_TYPE_TINYINT,
  SQL_TYPE_UTINYINT,
  SQL_TYPE_SMALLINT,
  SQL_TYPE_USMALLINT,
  SQL_TYPE_INTEGER,
  SQL_TYPE_UINTEGER,
  SQL_TYPE_BIGINT,
  SQL_TYPE_UBIGINT,
  SQL_TYPE_HUGEINT,
  SQL_TYPE_FLOAT,
  SQL_TYPE_DOUBLE,
  SQL_TYPE_DECIMAL,
  SQL_TYPE_BOOLEAN,
  SQL_TYPE_VARCHAR,
  SQL_TYPE_STRING,
  SQL_TYPE_DATE,
  SQL_TYPE_TIME,
  SQL_TYPE_TIMESTAMP,
  SQL_TYPE_TIMESTAMPTZ,
  SQL_TYPE_INTERVAL,
  SQL_TYPE_BLOB,
  SQL_TYPE_UUID,
  SQL_TYPE_STRUCT,
  SQL_TYPE_UNION,
  SQL_TYPE_MAP,
  SQL_TYPE_LIST,
  SQL_TYPE_ARRAY,
  SQL_TYPE_ENUM,
  SQL_TYPE_JSON,
  SQL_TYPE_INET,
  SQL_TYPE_MACADDR,
  SQL_TYPE_BIT,
  SQL_TYPE_BITSTRING,
] as const;

export const SQL_COMPLEX_DATA_TYPES = [
  SQL_TYPE_STRUCT,
  SQL_TYPE_LIST,
  SQL_TYPE_UNION,
  SQL_TYPE_MAP,
  SQL_TYPE_ARRAY,
] as const;

export const SQL_CONSTRAINT_PRIMARY_KEY = 'PRIMARY KEY';
export const SQL_CONSTRAINT_UNIQUE = 'UNIQUE';
export const SQL_CONSTRAINT_CHECK = 'CHECK';
export const SQL_CONSTRAINT_FOREIGN_KEY = 'FOREIGN KEY';

export const SQL_CONSTRAINT_TYPES = [
  SQL_CONSTRAINT_PRIMARY_KEY,
  SQL_CONSTRAINT_UNIQUE,
  SQL_CONSTRAINT_CHECK,
  SQL_CONSTRAINT_FOREIGN_KEY,
] as const;

// Composed SQL keywords for robust SQL generation
export const SQL_KEYWORD_DROP_TABLE_IF_EXISTS = `${SQL_KEYWORD_DROP} ${SQL_KEYWORD_TABLE} ${SQL_KEYWORD_IF} ${SQL_KEYWORD_EXISTS}`;
export const SQL_KEYWORD_DROP_INDEX_IF_EXISTS = `${SQL_KEYWORD_DROP} ${SQL_KEYWORD_INDEX} ${SQL_KEYWORD_IF} ${SQL_KEYWORD_EXISTS}`;
export const SQL_KEYWORD_CREATE_TABLE = `${SQL_KEYWORD_CREATE} ${SQL_KEYWORD_TABLE}`;
export const SQL_KEYWORD_IF_NOT_EXISTS = `${SQL_KEYWORD_IF} NOT ${SQL_KEYWORD_EXISTS}`;
export const SQL_KEYWORD_ALTER_TABLE = `${SQL_KEYWORD_ALTER} ${SQL_KEYWORD_TABLE}`;
export const SQL_KEYWORD_ADD_COLUMN = `${SQL_KEYWORD_ADD} ${SQL_KEYWORD_COLUMN}`;
export const SQL_KEYWORD_CREATE_INDEX = `${SQL_KEYWORD_CREATE} ${SQL_KEYWORD_INDEX}`;
export const SQL_KEYWORD_DROP_CONSTRAINT = `${SQL_KEYWORD_DROP} ${SQL_KEYWORD_CONSTRAINT}`;
export const SQL_KEYWORD_RENAME_TO = `${SQL_KEYWORD_RENAME} TO`;
export const SQL_KEYWORD_RENAME_COLUMN = `${SQL_KEYWORD_RENAME} ${SQL_KEYWORD_COLUMN}`;
export const SQL_KEYWORD_SET_DATA_TYPE = `SET DATA TYPE`;
export const SQL_KEYWORD_DROP_COLUMN = `${SQL_KEYWORD_DROP} ${SQL_KEYWORD_COLUMN}`;
export const SQL_KEYWORD_NOT_NULL = 'NOT NULL';
