[project]
name = "slice-command-server"
version = "0.1.0"
description = "Command-R server para Slice/ALIVE - OpenAI API compatible"
authors = [
    {name = "Slice Team", email = "team@slice.dev"},
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "httpx>=0.25.0",
    "transformers>=4.35.0",
    "torch>=2.7.1",
    "numpy>=1.24.0",
    "python-multipart>=0.0.6",
    "accelerate>=1.8.1",
]
requires-python = ">=3.9"
readme = "README.md"
license = {text = "MIT"}

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
version = {source = "file", path = "server/__init__.py"}

[tool.pdm.dev-dependencies]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",
]
lint = [
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.6.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
]

[tool.ruff]
line-length = 88
target-version = "py39"
select = ["E", "F", "W", "C90", "I", "N", "D", "UP", "S", "B", "A", "C4", "ICN", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SIM", "TCH", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]
ignore = ["D100", "D101", "D102", "D103", "D104", "D105", "D107"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=server --cov-report=term-missing --cov-report=html"

[dependency-groups]
dev = [
    "pytest-cov>=6.2.1",
]
